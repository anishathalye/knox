#lang yosys

; produced from the following Verilog:
;
; module ram #(
;     parameter ADDR_BITS = 10,
; ) (
;     input clk,
;     input valid,
;     input [31:0] addr,
;     input [31:0] din,
;     input [3:0] wstrb,
;     output [31:0] dout,
;     output ready
; );
;
; wire [ADDR_BITS-3:0] idx = addr[ADDR_BITS-1:2];
; reg [31:0] ram [(2**(ADDR_BITS-2))-1:0];
;
; wire [31:0] din_masked = {wstrb[3] ? din[31:24] : ram[idx][31:24],
;     wstrb[2] ? din[23:16] : ram[idx][23:16],
;     wstrb[1] ? din[15:8] : ram[idx][15:8],
;     wstrb[0] ? din[7:0] : ram[idx][7:0]};
;
; always @(posedge clk) begin
;     if (valid && wstrb != 4'b0000) begin
;         ram[idx] <= din_masked;
;     end
; end
;
; assign dout = ram[idx];
; assign ready = valid; // always ready
;
; endmodule

; SMT-LIBv2 description generated by Yosys 0.9+2406 (git sha1 584780d7, clang 10.0.1 -fPIC -Os)
; yosys-smt2-stdt
; yosys-smt2-module ram
(declare-datatype |ram_s| ((|ram_mk|
  (|ram_is| Bool)
  (|ram#0| (_ BitVec 32)) ; \addr
  (|ram#1| Bool) ; \clk
  (|ram#2| (_ BitVec 32)) ; \din
  (|ram#3#0| (Array (_ BitVec 8) (_ BitVec 32))) ; ram
  (|ram#5| Bool) ; \valid
  (|ram#6| (_ BitVec 4)) ; \wstrb
)))
; yosys-smt2-input addr 32
(define-fun |ram_n addr| ((state |ram_s|)) (_ BitVec 32) (|ram#0| state))
; yosys-smt2-input clk 1
; yosys-smt2-clock clk posedge
(define-fun |ram_n clk| ((state |ram_s|)) Bool (|ram#1| state))
; yosys-smt2-input din 32
(define-fun |ram_n din| ((state |ram_s|)) (_ BitVec 32) (|ram#2| state))
; yosys-smt2-output dout 32
; yosys-smt2-memory ram 8 32 1 1 sync
(define-fun |ram_m ram| ((state |ram_s|)) (Array (_ BitVec 8) (_ BitVec 32)) (|ram#3#0| state))
(define-fun |ram_m:R0A ram| ((state |ram_s|)) (_ BitVec 8) ((_ extract 9 2) (|ram#0| state))) ; \addr [9:2]
(define-fun |ram#4| ((state |ram_s|)) (_ BitVec 32) (select (|ram#3#0| state) (|ram_m:R0A ram| state))) ; \dout
(define-fun |ram_m:R0D ram| ((state |ram_s|)) (_ BitVec 32) (|ram#4| state))
(define-fun |ram_n dout| ((state |ram_s|)) (_ BitVec 32) (|ram#4| state))
; yosys-smt2-output ready 1
(define-fun |ram_n ready| ((state |ram_s|)) Bool (|ram#5| state))
; yosys-smt2-input valid 1
(define-fun |ram_n valid| ((state |ram_s|)) Bool (|ram#5| state))
; yosys-smt2-input wstrb 4
(define-fun |ram_n wstrb| ((state |ram_s|)) (_ BitVec 4) (|ram#6| state))
(define-fun |ram#7| ((state |ram_s|)) Bool (distinct (|ram#6| state) #b0000)) ; $ne$ram.v:22$14_Y
(define-fun |ram#8| ((state |ram_s|)) Bool (and (or  (|ram#5| state) false) (or  (|ram#7| state) false))) ; $logic_and$ram.v:22$15_Y
(define-fun |ram#9| ((state |ram_s|)) (_ BitVec 8) (ite (|ram#8| state) ((_ extract 9 2) (|ram#0| state)) #b00000000)) ; $0$memwr$\ram$ram.v:23$5_ADDR[7:0]$11
(define-fun |ram#10| ((state |ram_s|)) (_ BitVec 8) (ite (= ((_ extract 0 0) (|ram#6| state)) #b1) ((_ extract 7 0) (|ram#2| state)) ((_ extract 7 0) (|ram#4| state)))) ; \din_masked [7:0]
(define-fun |ram#11| ((state |ram_s|)) (_ BitVec 8) (ite (= ((_ extract 1 1) (|ram#6| state)) #b1) ((_ extract 15 8) (|ram#2| state)) ((_ extract 15 8) (|ram#4| state)))) ; \din_masked [15:8]
(define-fun |ram#12| ((state |ram_s|)) (_ BitVec 8) (ite (= ((_ extract 2 2) (|ram#6| state)) #b1) ((_ extract 23 16) (|ram#2| state)) ((_ extract 23 16) (|ram#4| state)))) ; \din_masked [23:16]
(define-fun |ram#13| ((state |ram_s|)) (_ BitVec 8) (ite (= ((_ extract 3 3) (|ram#6| state)) #b1) ((_ extract 31 24) (|ram#2| state)) ((_ extract 31 24) (|ram#4| state)))) ; \din_masked [31:24]
(define-fun |ram#14| ((state |ram_s|)) (_ BitVec 32) (ite (|ram#8| state) (concat (|ram#13| state) (concat (|ram#12| state) (concat (|ram#11| state) (|ram#10| state)))) #b00000000000000000000000000000000)) ; $0$memwr$\ram$ram.v:23$5_DATA[31:0]$12
(define-fun |ram#15| ((state |ram_s|)) (_ BitVec 1) (ite (|ram#8| state) #b1 #b0)) ; $0$memwr$\ram$ram.v:23$5_EN[31:0]$13 [31]
(define-fun |ram_m:W0A ram| ((state |ram_s|)) (_ BitVec 8) (|ram#9| state)) ; $0$memwr$\ram$ram.v:23$5_ADDR[7:0]$11
(define-fun |ram_m:W0D ram| ((state |ram_s|)) (_ BitVec 32) (|ram#14| state)) ; $0$memwr$\ram$ram.v:23$5_DATA[31:0]$12
(define-fun |ram_m:W0M ram| ((state |ram_s|)) (_ BitVec 32) (concat (|ram#15| state) (concat (|ram#15| state) (concat (|ram#15| state) (concat (|ram#15| state) (concat (|ram#15| state) (concat (|ram#15| state) (concat (|ram#15| state) (concat (|ram#15| state) (concat (|ram#15| state) (concat (|ram#15| state) (concat (|ram#15| state) (concat (|ram#15| state) (concat (|ram#15| state) (concat (|ram#15| state) (concat (|ram#15| state) (concat (|ram#15| state) (concat (|ram#15| state) (concat (|ram#15| state) (concat (|ram#15| state) (concat (|ram#15| state) (concat (|ram#15| state) (concat (|ram#15| state) (concat (|ram#15| state) (concat (|ram#15| state) (concat (|ram#15| state) (concat (|ram#15| state) (concat (|ram#15| state) (concat (|ram#15| state) (concat (|ram#15| state) (concat (|ram#15| state) (concat (|ram#15| state) (|ram#15| state))))))))))))))))))))))))))))))))) ; { $0$memwr$\ram$ram.v:23$5_EN[31:0]$13 [31] $0$memwr$\ram$ram.v:23$5_EN[31:0]$13 [31] $0$memwr$\ram$ram.v:23$5_EN[31:0]$13 [31] $0$memwr$\ram$ram.v:23$5_EN[31:0]$13 [31] $0$memwr$\ram$ram.v:23$5_EN[31:0]$13 [31] $0$memwr$\ram$ram.v:23$5_EN[31:0]$13 [31] $0$memwr$\ram$ram.v:23$5_EN[31:0]$13 [31] $0$memwr$\ram$ram.v:23$5_EN[31:0]$13 [31] $0$memwr$\ram$ram.v:23$5_EN[31:0]$13 [31] $0$memwr$\ram$ram.v:23$5_EN[31:0]$13 [31] $0$memwr$\ram$ram.v:23$5_EN[31:0]$13 [31] $0$memwr$\ram$ram.v:23$5_EN[31:0]$13 [31] $0$memwr$\ram$ram.v:23$5_EN[31:0]$13 [31] $0$memwr$\ram$ram.v:23$5_EN[31:0]$13 [31] $0$memwr$\ram$ram.v:23$5_EN[31:0]$13 [31] $0$memwr$\ram$ram.v:23$5_EN[31:0]$13 [31] $0$memwr$\ram$ram.v:23$5_EN[31:0]$13 [31] $0$memwr$\ram$ram.v:23$5_EN[31:0]$13 [31] $0$memwr$\ram$ram.v:23$5_EN[31:0]$13 [31] $0$memwr$\ram$ram.v:23$5_EN[31:0]$13 [31] $0$memwr$\ram$ram.v:23$5_EN[31:0]$13 [31] $0$memwr$\ram$ram.v:23$5_EN[31:0]$13 [31] $0$memwr$\ram$ram.v:23$5_EN[31:0]$13 [31] $0$memwr$\ram$ram.v:23$5_EN[31:0]$13 [31] $0$memwr$\ram$ram.v:23$5_EN[31:0]$13 [31] $0$memwr$\ram$ram.v:23$5_EN[31:0]$13 [31] $0$memwr$\ram$ram.v:23$5_EN[31:0]$13 [31] $0$memwr$\ram$ram.v:23$5_EN[31:0]$13 [31] $0$memwr$\ram$ram.v:23$5_EN[31:0]$13 [31] $0$memwr$\ram$ram.v:23$5_EN[31:0]$13 [31] $0$memwr$\ram$ram.v:23$5_EN[31:0]$13 [31] $0$memwr$\ram$ram.v:23$5_EN[31:0]$13 [31] }
(define-fun |ram#3#1| ((state |ram_s|)) (Array (_ BitVec 8) (_ BitVec 32)) (store (|ram#3#0| state) (|ram_m:W0A ram| state) (bvor (bvand (|ram_m:W0D ram| state) (|ram_m:W0M ram| state)) (bvand (select (|ram#3#0| state) (|ram_m:W0A ram| state)) (bvnot (|ram_m:W0M ram| state)))))) ; ram
(define-fun |ram_a| ((state |ram_s|)) Bool true)
(define-fun |ram_u| ((state |ram_s|)) Bool true)
(define-fun |ram_i| ((state |ram_s|)) Bool true)
(define-fun |ram_h| ((state |ram_s|)) Bool true)
(define-fun |ram_t| ((state |ram_s|) (next_state |ram_s|)) Bool
  (= (|ram#3#1| state) (|ram#3#0| next_state)) ; ram
) ; end of module ram
; yosys-smt2-topmod ram
; end of yosys output
