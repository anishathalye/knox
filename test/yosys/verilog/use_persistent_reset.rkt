#lang yosys

; produced from the following Verilog:
;
;
; module use_persistent_reset (
;     input clk,
;     input nrst,
;     input en,
;     output [7:0] count,
; );
;     // artificial example that loads persistent state on reset
;     reg [7:0] count_persistent;
;     reg [7:0] count;
;
;     always @(posedge clk) begin
;         if (!nrst) begin
;             count <= count_persistent;
;         end
;         else if (en) begin
;             count <= count + 1;
;             count_persistent <= count + 1;
;         end
;     end
; endmodule

; by running the command:
;
; yosys -p 'read_verilog use_persistent_reset.v' -p 'prep' -p 'write_smt2 -stdt use_persistent_reset.rkt'

; SMT-LIBv2 description generated by Yosys 0.29 (git sha1 9c5a60eb201, clang 14.0.3 -fPIC -Os)
; yosys-smt2-stdt
; yosys-smt2-module use_persistent_reset
(declare-datatype |use_persistent_reset_s| ((|use_persistent_reset_mk|
  (|use_persistent_reset_is| Bool)
  (|use_persistent_reset#0| Bool) ; \clk
  (|use_persistent_reset#1| (_ BitVec 8)) ; \count
  (|use_persistent_reset#2| (_ BitVec 8)) ; \count_persistent
  (|use_persistent_reset#3| Bool) ; \en
  (|use_persistent_reset#4| Bool) ; \nrst
)))
; yosys-smt2-input clk 1
; yosys-smt2-clock clk posedge
; yosys-smt2-witness {"offset": 0, "path": ["\\clk"], "smtname": "clk", "smtoffset": 0, "type": "posedge", "width": 1}
; yosys-smt2-witness {"offset": 0, "path": ["\\clk"], "smtname": "clk", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |use_persistent_reset_n clk| ((state |use_persistent_reset_s|)) Bool (|use_persistent_reset#0| state))
; yosys-smt2-witness {"offset": 0, "path": ["\\count"], "smtname": 1, "smtoffset": 0, "type": "reg", "width": 8}
; yosys-smt2-output count 8
; yosys-smt2-register count 8
(define-fun |use_persistent_reset_n count| ((state |use_persistent_reset_s|)) (_ BitVec 8) (|use_persistent_reset#1| state))
; yosys-smt2-witness {"offset": 0, "path": ["\\count_persistent"], "smtname": 2, "smtoffset": 0, "type": "reg", "width": 8}
; yosys-smt2-register count_persistent 8
(define-fun |use_persistent_reset_n count_persistent| ((state |use_persistent_reset_s|)) (_ BitVec 8) (|use_persistent_reset#2| state))
; yosys-smt2-input en 1
; yosys-smt2-witness {"offset": 0, "path": ["\\en"], "smtname": "en", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |use_persistent_reset_n en| ((state |use_persistent_reset_s|)) Bool (|use_persistent_reset#3| state))
; yosys-smt2-input nrst 1
; yosys-smt2-witness {"offset": 0, "path": ["\\nrst"], "smtname": "nrst", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |use_persistent_reset_n nrst| ((state |use_persistent_reset_s|)) Bool (|use_persistent_reset#4| state))
(define-fun |use_persistent_reset#5| ((state |use_persistent_reset_s|)) (_ BitVec 8) (bvadd (|use_persistent_reset#1| state) #b00000001)) ; $add$use_persistent_reset.v:16$3_Y
(define-fun |use_persistent_reset#6| ((state |use_persistent_reset_s|)) (_ BitVec 8) (ite (|use_persistent_reset#3| state) (|use_persistent_reset#5| state) (|use_persistent_reset#2| state))) ; $procmux$5_Y
(define-fun |use_persistent_reset#7| ((state |use_persistent_reset_s|)) (_ BitVec 8) (ite (|use_persistent_reset#4| state) (|use_persistent_reset#6| state) (|use_persistent_reset#2| state))) ; $0\count_persistent[7:0]
(define-fun |use_persistent_reset#8| ((state |use_persistent_reset_s|)) (_ BitVec 8) (ite (|use_persistent_reset#3| state) (|use_persistent_reset#5| state) (|use_persistent_reset#1| state))) ; $procmux$10_Y
(define-fun |use_persistent_reset#9| ((state |use_persistent_reset_s|)) (_ BitVec 8) (ite (|use_persistent_reset#4| state) (|use_persistent_reset#8| state) (|use_persistent_reset#2| state))) ; $0\count[7:0]
(define-fun |use_persistent_reset_a| ((state |use_persistent_reset_s|)) Bool true)
(define-fun |use_persistent_reset_u| ((state |use_persistent_reset_s|)) Bool true)
(define-fun |use_persistent_reset_i| ((state |use_persistent_reset_s|)) Bool true)
(define-fun |use_persistent_reset_h| ((state |use_persistent_reset_s|)) Bool true)
(define-fun |use_persistent_reset_t| ((state |use_persistent_reset_s|) (next_state |use_persistent_reset_s|)) Bool (and
  (= (|use_persistent_reset#7| state) (|use_persistent_reset#2| next_state)) ; $procdff$16 \count_persistent
  (= (|use_persistent_reset#9| state) (|use_persistent_reset#1| next_state)) ; $procdff$15 \count
)) ; end of module use_persistent_reset
; yosys-smt2-topmod use_persistent_reset
; end of yosys output
